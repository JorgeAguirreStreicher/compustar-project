<?php
/**
 * Stage 06 — Products (blindado / minimal)
 * - Lee RUN_DIR/resolved.jsonl (o validated.jsonl si el primero no existe)
 * - Crea/actualiza productos WooCommerce (conservador: título, excerpt, contenido, SKU y tipo)
 * - Escribe reportes CSV en RUN_DIR/final/ y log en RUN_DIR/logs/stage06.log
 *
 * IMPORTANTE:
 *  - No llama a 05-terms ni a ningún otro stage. Sin “preview”.
 *  - En CLI: si WP no está cargado, hace bootstrap de /home/compustar/htdocs/wp-load.php
 *  - Nunca imprime JSON de “05-terms”. La única salida final es un JSON de “06-products-minimal”.
 */

if (PHP_SAPI !== 'cli' && (!defined('WP_CLI') || !WP_CLI)) {
    // Evitar ejecuciones web
    return;
}

/* -------- Bootstrap robusto de WordPress -------- */
if (!function_exists('get_option')) {
    $wp_root = getenv('WP');
    if ($wp_root && is_dir($wp_root) && file_exists(rtrim($wp_root, '/').'/wp-load.php')) {
        require_once rtrim($wp_root, '/').'/wp-load.php';
    } else {
        // subir 5 niveles: .../plugins/compu-import-lego/includes/stages -> WP root
        $cand = dirname(__DIR__, 5).'/wp-load.php';
        if (file_exists($cand)) {
            require_once $cand;
        } else {
            // último intento
            $cand2 = '/home/compustar/htdocs/wp-load.php';
            if (file_exists($cand2)) {
                require_once $cand2;
            }
        }
    }
}
global $wpdb;
if (!isset($wpdb) || !is_object($wpdb)) {
    fwrite(STDERR, "[stage06] FATAL: WordPress no cargó (\$wpdb nulo). Ejecuta con: wp --path=/home/compustar/htdocs eval-file <este archivo>\n");
    exit(2);
}
/* ----------------------------------------------- */

$RUN_ID  = (int) (getenv('RUN_ID') ?: 0);
$RUN_DIR = rtrim((string) getenv('RUN_DIR'), '/');
$LIMIT   = getenv('LIMIT') !== false ? (int) getenv('LIMIT') : null;
$OFFSET  = getenv('OFFSET') !== false ? (int) getenv('OFFSET') : 0;
$DRY     = (int) (getenv('DRY_RUN') !== false ? getenv('DRY_RUN') : 0);
$DEBUG   = (int) (getenv('DEBUG') !== false ? getenv('DEBUG') : 0);
$REQUIRE_TERM = (int) (getenv('REQUIRE_TERM') !== false ? getenv('REQUIRE_TERM') : 1);

if ($RUN_DIR === '' || !is_dir($RUN_DIR)) {
    fwrite(STDERR, "[stage06] FATAL: RUN_DIR inválido: {$RUN_DIR}\n");
    exit(3);
}

$logDir   = $RUN_DIR.'/logs';
$finalDir = $RUN_DIR.'/final';
if (!is_dir($logDir))  @mkdir($logDir, 0775, true);
if (!is_dir($finalDir)) @mkdir($finalDir, 0775, true);
$logFile  = $logDir.'/stage06.log';
$logFp    = @fopen($logFile, 'a');

function s06_log($msg) {
    global $logFp, $DEBUG;
    $line = '['.date('Y-m-d H:i:s')."] stage06: {$msg}\n";
    if ($logFp) fwrite($logFp, $line);
    if ($DEBUG) fwrite(STDOUT, $line);
}
s06_log("RUN_ID={$GLOBALS['RUN_ID']} RUN_DIR={$GLOBALS['RUN_DIR']} DRY_RUN={$GLOBALS['DRY']} LIMIT=".($GLOBALS['LIMIT']??'none')." OFFSET={$GLOBALS['OFFSET']} REQUIRE_TERM={$GLOBALS['REQUIRE_TERM']}");

// Selección de input
$inResolved  = $RUN_DIR.'/resolved.jsonl';
$inValidated = $RUN_DIR.'/validated.jsonl';
$inFile = file_exists($inResolved) ? $inResolved : (file_exists($inValidated) ? $inValidated : null);
if (!$inFile) {
    s06_log("ERROR: no existe resolved.jsonl ni validated.jsonl en $RUN_DIR");
    exit(4);
}

// CSVs
$csvImported = fopen($finalDir.'/imported.csv', 'w');
$csvUpdated  = fopen($finalDir.'/updated.csv',  'w');
$csvSkipped  = fopen($finalDir.'/skipped.csv',  'w');
$csvHeader   = ['sku','product_id','action','reason'];
foreach ([$csvImported,$csvUpdated,$csvSkipped] as $fp) {
    fputcsv($fp, $csvHeader, ',', '"', '\\');
}

// Helpers
function s06_first(array $row, array $keys, $default=null) {
    foreach ($keys as $k) {
        if (array_key_exists($k, $row) && $row[$k] !== '' && $row[$k] !== null) return $row[$k];
    }
    return $default;
}
function s06_clip($txt, $len=300) {
    $t = wp_strip_all_tags((string)$txt);
    return mb_strlen($t)>$len ? mb_substr($t,0,$len-1).'…' : $t;
}
function s06_build_name(array $row): string {
    $parts = [];
    $b = trim((string)s06_first($row,['brand','marca'],''));
    $m = trim((string)s06_first($row,['model','modelo'],''));
    $t = trim((string)s06_first($row,['title','titulo','Título'],''));
    if ($b) $parts[]=$b; if ($m) $parts[]=$m; if ($t) $parts[]=$t;
    return trim(implode(' ', $parts));
}
function s06_find_pid_by_sku(string $sku): ?int {
    global $wpdb;
    $pid = (int) $wpdb->get_var($wpdb->prepare(
        "SELECT post_id FROM {$wpdb->postmeta} WHERE meta_key='_sku' AND meta_value=%s LIMIT 1", $sku
    ));
    return $pid ?: null;
}
function s06_upsert_compu_products(string $sku, array $row, int $pid, int $DRY): void {
    global $wpdb;
    $table = $wpdb->prefix.'compu_products';
    // si la tabla no existe, salimos silencioso
    $exists = $wpdb->get_var($wpdb->prepare("SHOW TABLES LIKE %s", $table));
    if ($exists !== $table) return;

    $name  = s06_build_name($row);
    $short = s06_clip(s06_first($row,['short_description','short','resumen','excerpt'],$name));
    $long  = (string) s06_first($row,['description','Descripción','descripcion'],'');
    $images= (string) s06_first($row,['image','Imagen Principal','img','imagen'],'');

    $payload = [
        'sku'               => $sku,
        'wp_post_id'        => $pid,
        'name'              => $name,
        'short_description' => $short,
        'long_description'  => $long,
        'images_json'       => $images ? json_encode([$images]) : json_encode([]),
        'updated_at'        => current_time('mysql'),
    ];
    if ($DRY) return;

    $existing = (int)$wpdb->get_var($wpdb->prepare("SELECT id FROM {$table} WHERE sku=%s LIMIT 1", $sku));
    if ($existing) {
        $wpdb->update($table, $payload, ['id'=>$existing]);
    } else {
        $payload['created_at'] = current_time('mysql');
        $wpdb->insert($table, $payload);
    }
}
function s06_upsert_wc_product(array $row, int $DRY, int $REQUIRE_TERM, array &$out): ?int {
    $sku = trim((string)s06_first($row,['sku','SKU','Sku','SkuID','clave'],''));
    if ($sku==='') { $out['reason']='no_sku'; return null; }

    $pidExisting = s06_find_pid_by_sku($sku);
    $termId = (int) s06_first($row, ['term_id','termId','woo_term_id','category_id'], 0);

    if (!$pidExisting && $REQUIRE_TERM && !$termId) {
        $out['reason']='no_term_for_new'; return null;
    }

    $name  = s06_build_name($row);
    $short = s06_clip(s06_first($row,['short_description','short','resumen','excerpt'],$name));
    $long  = (string) s06_first($row,['description','Descripción','descripcion'],'');

    if ($pidExisting) {
        if ($DRY) { $out['action']='updated_dry'; return $pidExisting; }
        wp_update_post(['ID'=>$pidExisting,'post_title'=>$name,'post_excerpt'=>$short,'post_content'=>$long]);
        $out['action']='updated';
        return $pidExisting;
    }

    if ($DRY) { $out['action']='imported_dry'; return 0; }

    $pid = wp_insert_post([
        'post_type'=>'product','post_status'=>'draft',
        'post_title'=>$name,'post_excerpt'=>$short,'post_content'=>$long
    ]);
    if (is_wp_error($pid) || !$pid) { $out['reason']='wp_insert_failed'; return null; }

    update_post_meta($pid,'_sku',$sku);
    wp_set_object_terms($pid,'simple','product_type');

    $out['action']='imported';
    return (int)$pid;
}

// Proceso
$processed=$created=$updated=$skipped=0;
$fh = fopen($inFile,'r');
if (!$fh) { s06_log("ERROR: no pude abrir $inFile"); exit(5); }

$idx=0;
while (!feof($fh)) {
    $line = fgets($fh);
    if ($line===false) break;
    $line = trim($line);
    if ($line==='') continue;
    $idx++;

    if ($idx <= $OFFSET) continue;
    $processed++;
    if ($LIMIT !== null && $processed>$LIMIT) break;

    $row = json_decode($line,true);
    if (!is_array($row)) { $skipped++; fputcsv($csvSkipped, ['', '', 'skipped','invalid_json']); continue; }

    $sku = trim((string)s06_first($row,['sku','SKU','Sku','SkuID','clave'],''));
    if ($sku==='') { $skipped++; fputcsv($csvSkipped, ['','','skipped','no_sku']); continue; }

    $out = ['sku'=>$sku,'product_id'=>'','action'=>'','reason'=>''];

    $pid = s06_upsert_wc_product($row, $DRY, $REQUIRE_TERM, $out);
    if ($pid === null) { $skipped++; fputcsv($csvSkipped, [$sku,'',$out['action']?:'skipped',$out['reason']?:'unknown']); continue; }

    s06_upsert_compu_products($sku,$row,(int)$pid,$DRY);

    $out['product_id'] = (string)$pid;
    switch ($out['action']) {
        case 'imported':     $created++; fputcsv($csvImported, [$sku,$pid,'imported','']); break;
        case 'updated':      $updated++; fputcsv($csvUpdated,  [$sku,$pid,'updated','']);  break;
        case 'imported_dry': $created++; fputcsv($csvImported, [$sku,$pid,'imported_dry','']); break;
        case 'updated_dry':  $updated++; fputcsv($csvUpdated,  [$sku,$pid,'updated_dry','']);  break;
        default:             $skipped++; fputcsv($csvSkipped,  [$sku,$pid,$out['action']?:'skipped',$out['reason']?:'unknown']); break;
    }
}
fclose($fh);
if ($csvImported) fclose($csvImported);
if ($csvUpdated)  fclose($csvUpdated);
if ($csvSkipped)  fclose($csvSkipped);

s06_log("DONE processed=$processed created=$created updated=$updated skipped=$skipped");

echo json_encode([
    'stage'     => '06-products-minimal',
    'run_id'    => $RUN_ID,
    'run_dir'   => $RUN_DIR,
    'processed' => $processed,
    'created'   => $created,
    'updated'   => $updated,
    'skipped'   => $skipped
], JSON_UNESCAPED_SLASHES)."\n";
